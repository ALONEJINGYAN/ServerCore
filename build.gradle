plugins {
    id 'fabric-loom' version '0.12+'
    id 'maven-publish'
}

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "https://maven.nucleoid.xyz/" }
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = "${mod_version}-${minecraft_version}" as String
archivesBaseName = project.archives_base_name
group = project.maven_group as String

loom {
    accessWidenerPath.set(file("src/main/resources/servercore.accesswidener"))
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    mappings loom.officialMojangMappings()

    // Fabric API
    Set<String> modules = ['fabric-api-base', 'fabric-command-api-v1', 'fabric-lifecycle-events-v1']
    modules.forEach {
        modImplementation(include(fabricApi.module(it, project.fabric_version)))
    }

    // Permission API
    modImplementation(include('me.lucko:fabric-permissions-api:0.1-SNAPSHOT'))

    // Placeholder API
    modImplementation(include("eu.pb4:placeholder-api:${placeholder_api_version}"))

    // Night Config
    implementation(include("com.electronwill.night-config:core:${night_config_version}"))
    implementation(include("com.electronwill.night-config:toml:${night_config_version}"))
}

processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    // noinspection all
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}